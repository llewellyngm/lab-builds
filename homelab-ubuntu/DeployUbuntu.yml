---
- hosts: localhost
  name:  DeployUbuntu.yml
  become: yes
  vars_files:
    - group_vars/vars/k8ct01_var.yml
    - group_vars/vars/shared_var.yml
    - group_vars/vault/ubuntu_vault.yml
  gather_facts: false
  vars:
    TempDir:                   /tmp                                 # Temp directory on the Ansible Controller
    WorkingDir:                /tmp/ubuntu20                        # Working directory on the Ansible Controller
    UbuntuISO:                 ubuntu-20.04.2-live-server-amd64.iso # Ubuntu ISO filename
    UbuntuISO_URL:             https://releases.ubuntu.com/20.04/   # Ubuntu ISO URL
    UbuntuNewISO:              ubuntu2004.iso                       # Ubuntu custom ISO name
    vCenterServer:             "{{ vcenter_host }}"                 # vCenter FQDN
    vCenterUser:               "{{ vcenter_user}}"                  # vCenter username
    vCenterPassword:           "{{ vcenter_password}}"              # vCenter password
    DataCenter:                "{{ vcenter_datacenter }}"           # vCenter datacenter
    vSphereCluster:            "{{ vmware_cluster_name }}"          # vCenter cluster
    VMFolder:                  "{{ vcenter_con_folder }}"           # vCenter VM folder
    Datastore:                 "{{ vmware_datastore}}"              # vSphere datastore              
    DatastoreDir:              /iso                                 # vSphere datastore ISO directory                            
    UbuntuVMName:              "{{ Ubuntu_VMName }}"                # Ubuntu VM name of the virtual machine          
    UbuntuVMDiskSize:          "{{ Ubuntu_DiskSize }}"              # Ubuntu VM disksize in gigabytes
    UbuntuVMMemorySize:        "{{ Ubuntu_Mem }}"                   # Ubuntu VM memory size in megabytes
    UbuntuVMCPUs:              "{{ Ubuntu_CPUs }}"                  # Ubuntu VM number of CPUs 
    UbuntuVMCPUCores:          "{{ Ubuntu_NoCores }}"               # Ubuntu VM number of cores
    UbuntuVMPortGroup:         "{{ Ubuntu_PG }}"                    # Ubuntu VM vSphere portgroup 
    UbuntuOSLocale:            en_US                                # Ubuntu OS locale
    UbuntuOSKeyboardLayout:    en                                   # Ubuntu OS keyboard layout 
    UbuntuOSKeyboardVariant:   us                                   # Ubuntu OS keyboard variant
    UbuntuOSIPv4Address:       "{{ Ubuntu_IP }}"                    # Ubuntu OS IPv4 address
    UbuntuOSIPv4Gateway:       "{{ Ubuntu_Gateway }}"               # Ubuntu OS IPv4 gateway
    UbuntuOSIPv4DNS:           "{{ Ubuntu_DNS }}"                   # Ubuntu OS DNS server
    UbuntuOSSearchDomain:      "{{ Ubuntu_SearchDomain }}"          # Ubuntu OS DNS search domain
    UbuntuOSHostname:          "{{ Ubuntu_Hostname }}"              # Ubuntu OS hostname
    UbuntuOSUser:              "{{ Ubuntu_User }}"                  # Ubuntu OS username
    UbuntuOSPassword:          "{{ Ubuntu_UserPassword }}"          # Ubuntu OS password

  tasks:
    - name: Create working directory on Ansible Controller
      ansible.builtin.file:
        path: "{{ WorkingDir }}"
        state: directory


    - name: Check if Ubuntu ISO exists locally on Ansible Controller
      ansible.builtin.stat:
        path: "{{ TempDir }}/{{ UbuntuISO }}"
      register: InstallerFileCheck


    - name: Download Ubuntu ISO (if ISO file doesn't exist locally)
      ansible.builtin.get_url:
        url:  "{{ UbuntuISO_URL }}{{ UbuntuISO }}"
        dest: "{{ TempDir }}/{{ UbuntuISO }}"
      when:
        - InstallerFileCheck.stat.exists != true
        

    - name: Mount Ubuntu ISO
      ansible.posix.mount:
        path:   "{{ WorkingDir }}/iso"
        src:    "{{ TempDir }}/{{ UbuntuISO }}"
        fstype: iso9660
        opts:   ro,noauto
        state:  mounted

    - name: Copy txt.cfg from Ubuntu ISO
      ansible.builtin.copy: 
        src: "{{ WorkingDir }}/iso/isolinux/txt.cfg"
        dest: "{{ WorkingDir }}/isocopy/isolinux/"
        mode: "666"


    - name: Edit txt.cfg to modify append line 
      ansible.builtin.replace:
        dest: "{{ WorkingDir }}/isocopy/isolinux/txt.cfg"
        regexp: 'append   initrd=/casper/initrd quiet  ---'
        replace: 'append   initrd=/casper/initrd quiet --- autoinstall ds=nocloud;s=/cdrom/autoinstall/'


    - name: Create directory to store user-data and meta-data
      ansible.builtin.file:
        path: "{{ WorkingDir }}/isocopy/autoinstall"
        state: directory


    - name: Copy user-data file to directory
      ansible.builtin.template: 
        src: ./Ubuntu_user-data.j2
        dest: "{{ WorkingDir }}/isocopy/autoinstall/user-data"
        mode: "666"


    - name: Create empty meta-data file in directory
      ansible.builtin.file:
        path: "{{ WorkingDir }}/isocopy/autoinstall/meta-data"
        state: touch
        mode: "666"


    - name: Create custom Ubuntu ISO
      ansible.builtin.command: "xorrisofs -relaxed-filenames -J -R -o {{ TempDir }}/{{ UbuntuNewISO }} -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table {{ WorkingDir }}/iso/ {{ WorkingDir }}/isocopy/"
      args:
        chdir: "{{ WorkingDir }}/isocopy/"


    - name: Unmount Ubuntu ISO
      ansible.posix.mount:
        path:   "{{ WorkingDir }}/iso"
        src:    "{{ TempDir }}/{{ UbuntuISO }}"
        fstype: iso9660
        opts:   ro,noauto
        state:  absent


    - name: Upload the custom Ubuntu ISO to the vSphere datastore
      community.vmware.vsphere_copy: 
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        validate_certs: no
        datacenter: "{{ DataCenter }}"
        src: "{{ TempDir }}/{{ UbuntuNewISO }}" 
        datastore: "{{ Datastore }}"
        path: "{{ DatastoreDir }}/{{ UbuntuNewISO }}"


    - name: Deploy Ubuntu VM
      community.vmware.vmware_guest:
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        validate_certs: no
        name: "{{ UbuntuVMName }}"
        state: poweredon
        guest_id: ubuntu64Guest
        cluster: "{{ vSphereCluster }}"
        datacenter: "{{ DataCenter }}"
        folder: "{{ VMFolder }}"
        disk:
        - size_gb: "{{ UbuntuVMDiskSize }}"
          type: thin
          datastore: "{{ Datastore }}"
        hardware:
          memory_mb: "{{ UbuntuVMMemorySize }}"
          num_cpus: "{{ UbuntuVMCPUs }}"
          num_cpu_cores_per_socket: "{{ UbuntuVMCPUCores }}"
          scsi: paravirtual
        networks:
          - name: "{{ UbuntuVMPortGroup }}"
            device_type: vmxnet3
        cdrom:
          - controller_number: 0
            unit_number: 0
            type: iso
            iso_path: "[{{ Datastore }}] {{ DatastoreDir }}/{{ UbuntuNewISO }}"
            state: present
        annotation: | 
                    *** Auto-Deployed by Ansible ***
                    Username: {{ UbuntuOSUser }}
                    Password: {{ UbuntuOSPassword }}


    - name: Start checking if the Ubuntu VM is ready
      community.vmware.vmware_guest_info:
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        datacenter: "{{ DataCenter }}"
        validate_certs: no
        name: "{{ UbuntuVMName }}"
        schema: vsphere
      register: vm_facts
      until: vm_facts.instance.guest.hostName is search(UbuntuOSHostname)
      retries: 30
      delay: 60


    - name: Set password for the Ubuntu user
      community.vmware.vmware_vm_shell:
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        validate_certs: no
        vm_id: "{{ UbuntuVMName }}"
        vm_username: "{{ UbuntuOSUser }}"
        vm_password: VMware1!
        vm_shell: /usr/bin/echo
        vm_shell_args: "'{{ UbuntuOSUser }}:{{ UbuntuOSPassword }}' | sudo chpasswd"


    - name: Copy network configuration file to working directory
      ansible.builtin.template: 
        src: ./Ubuntu_Netplan.j2
        dest: "{{ WorkingDir }}/00-installer-config.yaml"
        mode: "666"


    - name: Copy network configuration file to Ubuntu VM
      community.vmware.vmware_guest_file_operation:
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        validate_certs: no
        vm_id: "{{ UbuntuVMName }}"
        vm_username: "{{ UbuntuOSUser }}"
        vm_password: VMware1!
        copy:
            src: "{{ WorkingDir }}/00-installer-config.yaml"
            dest: "/home/{{ UbuntuOSUser }}/00-installer-config.yaml"


    - name: Move network configuration file to right location on Ubuntu VM
      community.vmware.vmware_vm_shell:
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        validate_certs: no
        vm_id: "{{ UbuntuVMName }}"
        vm_username: "{{ UbuntuOSUser }}"
        vm_password: VMware1!
        vm_shell: /usr/bin/sudo
        vm_shell_args: "mv /home/{{ UbuntuOSUser }}/00-installer-config.yaml /etc/netplan/00-installer-config.yaml"


    - name: Appply the network configuration on Ubuntu VM
      community.vmware.vmware_vm_shell:
        hostname: "{{ vCenterServer }}"
        username: "{{ vCenterUser }}"
        password: "{{ vCenterPassword }}"
        validate_certs: no
        vm_id: "{{ UbuntuVMName }}"
        vm_username: "{{ UbuntuOSUser }}"
        vm_password: VMware1!
        vm_shell: /usr/bin/sudo
        vm_shell_args: netplan apply


    - name: Delete working directory on Ansible Controller
      ansible.builtin.file:
        path: "{{ WorkingDir }}"
        state: absent
